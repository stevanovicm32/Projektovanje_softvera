/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package formsTuristickaAgencija;

import controller.KlijentskiKontroler;
import domain.Rezervacija;
import domain.TAVU;
import domain.TuristickaAgencija;
import domain.VrstaUsluge;
import java.util.ArrayList;
import models.TableModelTuristickeAgencije;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import models.TableModelVrstaUslugeTuristickaAgencija;

/**
 *
 * @author Lenovo
 */
public class FormaPretraziTuristickaAgencija extends javax.swing.JDialog {
    TableModelVrstaUslugeTuristickaAgencija pomocni = new TableModelVrstaUslugeTuristickaAgencija();
    /**
     * Creates new form PretraziTuristickaAgencija
     */
    public FormaPretraziTuristickaAgencija(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        TableModelTuristickeAgencije model = new TableModelTuristickeAgencije();
        Thread th = new Thread(model);
        th.start();
        jTableTuristickaAgencija.setModel(model);
        setTitle("Pretraga turistickih agencija");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableTuristickaAgencija = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldNaziv = new javax.swing.JTextField();
        jButtonOtkazi = new javax.swing.JButton();
        jButtonIzmeni = new javax.swing.JButton();
        jButtonDetalji = new javax.swing.JButton();
        jButtonObrisi = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTableTuristickaAgencija.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableTuristickaAgencija);

        jLabel1.setText("Naziv");

        jTextFieldNaziv.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldNazivKeyReleased(evt);
            }
        });

        jButtonOtkazi.setText("Otkazi");
        jButtonOtkazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOtkaziActionPerformed(evt);
            }
        });

        jButtonIzmeni.setText("Izmeni");
        jButtonIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIzmeniActionPerformed(evt);
            }
        });

        jButtonDetalji.setText("Detalji");
        jButtonDetalji.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDetaljiActionPerformed(evt);
            }
        });

        jButtonObrisi.setText("Obrisi");
        jButtonObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonObrisiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldNaziv, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 641, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonOtkazi)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonObrisi)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonDetalji)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonIzmeni)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldNaziv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonOtkazi)
                    .addComponent(jButtonIzmeni)
                    .addComponent(jButtonDetalji)
                    .addComponent(jButtonObrisi))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonOtkaziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOtkaziActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButtonOtkaziActionPerformed

    private void jTextFieldNazivKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNazivKeyReleased
        String param = jTextFieldNaziv.getText();
        ((TableModelTuristickeAgencije) jTableTuristickaAgencija.getModel()).setParametar(param);
    }//GEN-LAST:event_jTextFieldNazivKeyReleased

    private void jButtonObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonObrisiActionPerformed
        int row = jTableTuristickaAgencija.getSelectedRow();
        
        if(row>=0){
            TuristickaAgencija ta = ((TableModelTuristickeAgencije) jTableTuristickaAgencija.getModel()).getSelectedTuristickaAgencija(row);
            int result = JOptionPane.showConfirmDialog(this, "Da li ste sigurni da zelite da "
                    + "obrisete ovu turisticku agenciju? " + ta.toString(), "Konfirmacija", JOptionPane.YES_NO_OPTION);

            if (result == JOptionPane.NO_OPTION) {
                return;
            }

            if (result == JOptionPane.YES_OPTION) {
                try {
                    ArrayList<Rezervacija> rezervacije = KlijentskiKontroler.getInstance().getAllRezervacija();
                    for (Rezervacija rezervacija : rezervacije) {
                        if(rezervacija.getAgencija().getIdAgencije().equals(ta.getIdAgencije())){
                            JOptionPane.showMessageDialog(this, "Ne mozete obrisati agenciju, jer postoji bar jedna rezervacija sa istom!", "Greska!", JOptionPane.ERROR_MESSAGE);
                            return;
                        }
                    }
                    ArrayList<VrstaUsluge> lista = pomocni.getLista();
                    TAVU t = new TAVU();
                    for (VrstaUsluge vrstaUsluge : lista) {
                        t.setAgencija(ta);
                        t.setUsluga(vrstaUsluge);
                        KlijentskiKontroler.getInstance().deleteTAVU(t);
                    }
                    KlijentskiKontroler.getInstance().deleteTuristickaAgencija(ta);
                    this.refreshTable();
                    JOptionPane.showMessageDialog(this, "Uspesno obrisana agencija.");
                } catch (Exception ex) {
                    Logger.getLogger(FormaPretraziTuristickaAgencija.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(this, ex.toString(), "Greska!", JOptionPane.ERROR_MESSAGE);
                }
            }
        }else{
            JOptionPane.showMessageDialog(this, "Morate odabrati agenciju!", "Obavestenje!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonObrisiActionPerformed

    private void jButtonDetaljiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDetaljiActionPerformed
        int row = jTableTuristickaAgencija.getSelectedRow();
        int signal = 1;

        if (row >= 0) {
            TuristickaAgencija ta = ((TableModelTuristickeAgencije) jTableTuristickaAgencija.getModel()).getSelectedTuristickaAgencija(row);
            new FormaTuristickaAgencija(this, true, ta, signal).setVisible(true);
        }else{
            JOptionPane.showMessageDialog(this, "Morate odabrati turisticku agenciju!", "Obavestenje!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonDetaljiActionPerformed

    private void jButtonIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIzmeniActionPerformed
        int row = jTableTuristickaAgencija.getSelectedRow();
        int signal = 2;

        if (row >= 0) {
            TuristickaAgencija ta = ((TableModelTuristickeAgencije) jTableTuristickaAgencija.getModel()).getSelectedTuristickaAgencija(row);
            new FormaTuristickaAgencija(this, true, ta, signal).setVisible(true);
        }else{
            JOptionPane.showMessageDialog(this, "Morate odabrati turisticku agenciju!", "Obavestenje!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonIzmeniActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDetalji;
    private javax.swing.JButton jButtonIzmeni;
    private javax.swing.JButton jButtonObrisi;
    private javax.swing.JButton jButtonOtkazi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableTuristickaAgencija;
    private javax.swing.JTextField jTextFieldNaziv;
    // End of variables declaration//GEN-END:variables
   
    void refreshTable(){
        TableModelTuristickeAgencije tm = (TableModelTuristickeAgencije) jTableTuristickaAgencija.getModel();
        tm.refreshTable();
    }
}
