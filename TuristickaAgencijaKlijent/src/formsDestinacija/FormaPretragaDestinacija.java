/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package formsDestinacija;

import controller.KlijentskiKontroler;
import domain.Destinacija;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import models.TableModelDestinacija;

/**
 *
 * @author Lenovo
 */
public class FormaPretragaDestinacija extends javax.swing.JDialog {

    /**
     * Creates new form FormaPretragaDestinacija
     */
    public FormaPretragaDestinacija(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        TableModelDestinacija model = new TableModelDestinacija();
        Thread th = new Thread(model);
        th.start();
        jTableDestinacije.setModel(model);
        jComboBoxDrzava.setEnabled(false);
        setTitle("Pretraga destinacija");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableDestinacije = new javax.swing.JTable();
        jTextFieldNaziv = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jComboBoxDrzava = new javax.swing.JComboBox<>();
        jComboBoxKontinent = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButtonOtkazi = new javax.swing.JButton();
        jButtonIzmeni = new javax.swing.JButton();
        jButtonObrisi = new javax.swing.JButton();
        jButtonDetalji = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTableDestinacije.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableDestinacije);

        jTextFieldNaziv.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldNazivKeyReleased(evt);
            }
        });

        jLabel1.setText("Naziv");

        jComboBoxDrzava.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Drzava" }));
        jComboBoxDrzava.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxDrzavaActionPerformed(evt);
            }
        });

        jComboBoxKontinent.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Evropa", "Azija", "Afrika", "Severna Amerika", "Južna Amerika", "Australija i Okeanija" }));
        jComboBoxKontinent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxKontinentActionPerformed(evt);
            }
        });

        jLabel2.setText("Kontinent");

        jLabel3.setText("Drzava");

        jButtonOtkazi.setText("Otkazi");
        jButtonOtkazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOtkaziActionPerformed(evt);
            }
        });

        jButtonIzmeni.setText("Izmeni");
        jButtonIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIzmeniActionPerformed(evt);
            }
        });

        jButtonObrisi.setText("Obrisi");
        jButtonObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonObrisiActionPerformed(evt);
            }
        });

        jButtonDetalji.setText("Detalji");
        jButtonDetalji.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDetaljiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldNaziv, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBoxKontinent, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBoxDrzava, 0, 157, Short.MAX_VALUE)
                        .addGap(14, 14, 14))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonOtkazi)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonObrisi)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonIzmeni)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonDetalji)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldNaziv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxKontinent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBoxDrzava, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonOtkazi)
                    .addComponent(jButtonIzmeni)
                    .addComponent(jButtonObrisi)
                    .addComponent(jButtonDetalji))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxDrzavaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxDrzavaActionPerformed
        String drzava=(String) jComboBoxDrzava.getSelectedItem();
        ((TableModelDestinacija) jTableDestinacije.getModel()).setParametar3(drzava);
    }//GEN-LAST:event_jComboBoxDrzavaActionPerformed

    private void jTextFieldNazivKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNazivKeyReleased
        String param = jTextFieldNaziv.getText();
        ((TableModelDestinacija) jTableDestinacije.getModel()).setParametar(param);
    }//GEN-LAST:event_jTextFieldNazivKeyReleased

    private void jComboBoxKontinentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxKontinentActionPerformed
        jComboBoxDrzava.setEnabled(true);
        String kontinent=(String) jComboBoxKontinent.getSelectedItem();
        if(kontinent.equals("Evropa")){
            this.popuniComboBoxEvropa();
        }else if(kontinent.equals("Azija")){
            this.popuniComboBoxAzija();
        }else if(kontinent.equals("Afrika")){
            this.popuniComboBoxAfrika();
        }else if(kontinent.equals("Severna Amerika")){
            this.popuniComboBoxSeverna();
        }else if(kontinent.equals("Južna Amerika")){
            this.popuniComboBoxJuzna();
        }else if(kontinent.equals("Australija i Okeanija")){
            this.popuniComboBoxAustralija();
        }
        
        ((TableModelDestinacija) jTableDestinacije.getModel()).setParametar2(kontinent);
    }//GEN-LAST:event_jComboBoxKontinentActionPerformed

    private void jButtonOtkaziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOtkaziActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButtonOtkaziActionPerformed

    private void jButtonObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonObrisiActionPerformed
        int row = jTableDestinacije.getSelectedRow();
        
        if(row>=0){
            Destinacija d = ((TableModelDestinacija) jTableDestinacije.getModel()).getSelectedDestinacija(row);
            int result = JOptionPane.showConfirmDialog(this, "Da li ste sigurni da zelite da "
                    + "obrisete ovu destinaciju? " + d.toString(), "Konfirmacija", JOptionPane.YES_NO_OPTION);

            if (result == JOptionPane.NO_OPTION) {
                return;
            }

            if (result == JOptionPane.YES_OPTION) {
                try {
                    KlijentskiKontroler.getInstance().deleteDestinacija(d);
                    this.refreshTable();
                    JOptionPane.showMessageDialog(this, "Uspesno obrisana destinacija.");
                } catch (Exception ex) {
                    Logger.getLogger(FormaPretragaDestinacija.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(this, "Ne mozete obrisati destinaciju, jer postoji barem jedna rezervacija za nju!", "Greska!", JOptionPane.ERROR_MESSAGE);
                }
            }
        }else{
            JOptionPane.showMessageDialog(this, "Morate odabrati destinaciju!", "Obavestenje!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonObrisiActionPerformed

    private void jButtonIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIzmeniActionPerformed
        int row = jTableDestinacije.getSelectedRow();
        int signal = 2;

        if (row >= 0) {
            Destinacija d = ((TableModelDestinacija) jTableDestinacije.getModel()).getSelectedDestinacija(row);
            new FormaDestinacija(this, true, d, signal).setVisible(true);
        }else{
            JOptionPane.showMessageDialog(this, "Morate odabrati destinaciju!", "Obavestenje!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonIzmeniActionPerformed

    private void jButtonDetaljiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDetaljiActionPerformed
        int row = jTableDestinacije.getSelectedRow();
        int signal = 1;

        if (row >= 0) {
            Destinacija d = ((TableModelDestinacija) jTableDestinacije.getModel()).getSelectedDestinacija(row);
            new FormaDestinacija(this, true, d, signal).setVisible(true);
        }else{
            JOptionPane.showMessageDialog(this, "Morate odabrati destinaciju!", "Obavestenje!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonDetaljiActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDetalji;
    private javax.swing.JButton jButtonIzmeni;
    private javax.swing.JButton jButtonObrisi;
    private javax.swing.JButton jButtonOtkazi;
    private javax.swing.JComboBox<String> jComboBoxDrzava;
    private javax.swing.JComboBox<String> jComboBoxKontinent;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableDestinacije;
    private javax.swing.JTextField jTextFieldNaziv;
    // End of variables declaration//GEN-END:variables

    private void popuniComboBoxEvropa() {
        jComboBoxDrzava.removeAllItems();

        String[] evropskeDrzave = {
            "Albanija", "Andora", "Austrija", "Belgija", "Belorusija", 
            "Bosna i Hercegovina", "Bugarska", "Crna Gora", "Češka", 
            "Danska", "Estonija", "Finska", "Francuska", "Grčka", 
            "Holandija", "Hrvatska", "Irska", "Island", "Italija", 
            "Kipar", "Letonija", "Litvanija", "Luksemburg", "Mađarska", 
            "Malta", "Moldavija", "Monako", "Nemačka", "Norveška", 
            "Poljska", "Portugal", "Rumunija", "San Marino", 
            "Severna Makedonija", "Slovačka", "Slovenija", 
            "Srbija", "Španija", "Švedska", "Švajcarska", "Ukrajina", "Velika Britanija", "Vatikan"
        };

        for (String drzava : evropskeDrzave) {
            jComboBoxDrzava.addItem(drzava);
        }
    }

    private void popuniComboBoxAzija() {
        jComboBoxDrzava.removeAllItems();

        String[] azijskeDrzave = {
            "Afganistan", "Armenija", "Azerbejdžan", "Bahrein", "Bangladeš", 
            "Butan", "Brunej", "Filipini", "Gruzijа", "Indija", "Indonezija", 
            "Iran", "Irač", "Izrael", "Japan", "Jemen", "Jordan", 
            "Kazahstan", "Kina", "Kirgistan", "Kuvajt", "Laos", 
            "Liban", "Malezija", "Maldivi", "Mjanmar (Burma)", "Mongolija", 
            "Nepal", "Oman", "Pakistan", "Palestina", "Saudijska Arabija", 
            "Singapur", "Sirija", "Južna Koreja", "Severna Koreja", 
            "Šri Lanka", "Tadžikistan", "Tajland", "Timor-Leste", 
            "Turkmenistan", "Turska", "Ujedinjeni Arapski Emirati", 
            "Uzbekistan", "Vijetnam"
        };

        for (String drzava : azijskeDrzave) {
            jComboBoxDrzava.addItem(drzava);
        }
    }

    private void popuniComboBoxAfrika() {
        jComboBoxDrzava.removeAllItems();
        
        String[] africkeDrzave = {
            "Alžir", "Angola", "Benin", "Bocvana", "Burkina Faso", 
            "Burundi", "Centralnoafrička Republika", "Čad", "Džibuti", 
            "Eritreja", "Esvatini (Svazilend)", "Etiopija", "Gabon", 
            "Gambija", "Gana", "Gvineja", "Gvineja-Bisau", "Ekvatorijalna Gvineja", 
            "Južni Sudan", "Južnoafrička Republika", "Kamerun", "Kap Verde", 
            "Kenija", "Komori", "Kongo", "Demokratska Republika Kongo", 
            "Lesoto", "Liberija", "Libija", "Madagaskar", "Malavi", 
            "Mali", "Maroko", "Mauricijus", "Mauritanija", "Mozambik", 
            "Namibija", "Niger", "Nigerija", "Ruanda", "Sao Tome i Principe", 
            "Sejšeli", "Senegal", "Sijera Leone", "Somalija", 
            "Sudan", "Tanzanija", "Togo", "Tunis", "Uganda", "Zambija", "Zimbabve"
        };

        for (String drzava : africkeDrzave) {
            jComboBoxDrzava.addItem(drzava);
        }
    }

    private void popuniComboBoxSeverna() {
        jComboBoxDrzava.removeAllItems();

        String[] severnoamerickeDrzave = {
            "Antigva i Barbuda", "Bahami", "Barbados", "Belize", 
            "Kanada", "Kostarika", "Kuba", "Dominika", "Dominikanska Republika", 
            "El Salvador", "Grenada", "Gvatemala", "Haiti", "Honduras", 
            "Jamajka", "Meksiko", "Nikaragva", "Panama", "Sveti Kristofor i Nevis", 
            "Sveti Vinsent i Grenadini", "Sveti Lucija", "Sjedinjene Američke Države", "Trinidad i Tobago"
        };

        for (String drzava : severnoamerickeDrzave) {
            jComboBoxDrzava.addItem(drzava);
        }
    }

    private void popuniComboBoxJuzna() {
        jComboBoxDrzava.removeAllItems();

        String[] juznoamerickeDrzave = {
            "Argentina", "Bolivija", "Brazil", "Čile", "Kolumbija", 
            "Ekvador", "Gvajana", "Paragvaj", "Peru", "Surinam", 
            "Urugvaj", "Venecuela", "Francuska Gvajana (Francuski prekomorski departman)"
        };

        for (String drzava : juznoamerickeDrzave) {
            jComboBoxDrzava.addItem(drzava);
        }
    }

    private void popuniComboBoxAustralija() {
        jComboBoxDrzava.removeAllItems();

        String[] australijaIOkeanija = {
            "Australija", "Fidži", "Kiribati", "Maršalska Ostrva", 
            "Mikronezija", "Nauru", "Novi Zeland", "Palau", 
            "Papua Nova Gvineja", "Samoa", "Solomonska Ostrva", 
            "Tonga", "Tuvalu", "Vanuatu"
        };

        for (String drzava : australijaIOkeanija) {
            jComboBoxDrzava.addItem(drzava);
        }
    }

    void refreshTable(){
        TableModelDestinacija tm = (TableModelDestinacija) jTableDestinacije.getModel();
        tm.refreshTable();
    }
}
